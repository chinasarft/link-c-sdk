cmake_minimum_required (VERSION 3.0)
project(testmqtt)

SET(GCC_COVERAGE_COMPILE_FLAGS "-std=gnu99 -Wall -Wno-unused -g")
SET(GCC_INCLUDE_PATH "-I../ ")
SET(CMAKE_C_FLAGS "${GCC_INCLUDE_PATH} ${GCC_COVERAGE_COMPILE_FLAGS}")

option(WITH_THREADING "Include client library threading support?" ON)
if (DEFINED ${WITH_THREADING} AND ${WITH_THREADING} STREQUAL ON)
        add_definitions("-DWITH_THREADING")
        if (WIN32)
                set (PTHREAD_LIBRARIES C:\\pthreads\\Pre-built.2\\lib\\x86\\pthreadVC2.lib)
                set (PTHREAD_INCLUDE_DIR C:\\pthreads\\Pre-built.2\\include)
        else (WIN32)
                set (PTHREAD_LIBRARIES pthread)
                set (PTHREAD_INCLUDE_DIR "")
        endif (WIN32)
else()
        set (PTHREAD_LIBRARIES "")
        set (PTHREAD_INCLUDE_DIR "")
endif()

set (OPENSSL_CRYPTO_LIBRARY ../../../third_party/openssl-1.1.0h/libcrypto.so)
set (OPENSSL_SSL_LIBRARY ../../../third_party/openssl-1.1.0h/libssl.so)
set (LIBRARIES ${OPENSSL_CRYPTO_LIBRARY} ${OPENSSL_CRYPTO_LIBRARY})

if (DEFINED $ENV{WITH_MOSQUITTO} AND  ${WITH_MOSQUITTO} STREQUAL ON)
link_directories(${CMAKE_CURRENT_SOURCE_DIR}/../../../third_party/openssl-1.1.0h/prefix/$ENV{ARCH}/lib)
else()
link_directories(${CMAKE_CURRENT_SOURCE_DIR}/../../../third_party/wolfMQTT/prefix/$ENV{ARCH}/lib/)
link_directories(${CMAKE_CURRENT_SOURCE_DIR}/../../../third_party/wolfssl/prefix/$ENV{ARCH}/lib/)
endif()
link_directories(${CMAKE_CURRENT_SOURCE_DIR}/..)

aux_source_directory(. LIB_MOSQUITTO_TEST)
add_executable(mos_test-$ENV{LIBPREFIX} ${LIB_MOSQUITTO_TEST})

if (DEFINED $ENV{WITH_MOSQUITTO} AND $ENV{WITH_MOSQUITTO} STREQUAL "ON")
	if (DEFINED ${WITH_TLS} AND ${WITH_TLS} STREQUAL ON)
        target_link_libraries(mos_test-$ENV{LIBPREFIX} mqtt pthread libcrypto.so libssl.so)
        else()
        target_link_libraries(mos_test-$ENV{LIBPREFIX} mqtt pthread)
        endif()
else()
	if (DEFINED ${WITH_TLS} AND ${WITH_TLS} STREQUAL ON)
        target_link_libraries(mos_test-$ENV{LIBPREFIX} mqtt pthread libwolfmqtt.a libwolfssl.a m)
        else()
        target_link_libraries(mos_test-$ENV{LIBPREFIX} mqtt pthread libwolfmqtt.a libwolfssl.a m)
        endif()
endif()
